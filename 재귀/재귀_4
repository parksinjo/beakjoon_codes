import java.io.*;
import java.util.*;

public class chapter_21_4 {
    static int[] A;
    static int[] tmp;
    static int count = 0;
    static int k;
    static int x = -1;
    static void merge_sort(int p, int r){
        if(p < r){
            int q = (p+r)/2;
            merge_sort(p, q);
            merge_sort(q + 1, r);
            merge(p, q, r);
        }

    }
    static void merge(int p, int q, int r){
        int i = p;
        int j = q+1;
        int t = 0;
        while(i <= q && j <= r){
            if(A[i] <= A[j]){
                tmp[t++] = A[i++];
            }
            else {
                tmp[t++] = A[j++];
            }
        }
        while(i<=q)
            tmp[t++] = A[i++];
        while(j<=r)
            tmp[t++] = A[j++];
        i = p;
        t = 0;
        while(i <= r){
            count++;
            if(count==k){
                x = tmp[t];
                break;
            }
            A[i++] = tmp[t++];
        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int num = Integer.parseInt(st.nextToken());
        k = Integer.parseInt(st.nextToken());
        A = new int[num];
        tmp = new int[num];
        st = new StringTokenizer(br.readLine());
        for (int i = 0; i < num; i++) {
            A[i] = Integer.parseInt(st.nextToken());
        }
        merge_sort(0,num-1);
        System.out.println(x);
    }
}